// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: ide.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrderType int32

const (
	OrderType_byTime     OrderType = 0
	OrderType_byMemory   OrderType = 1
	OrderType_byCPU      OrderType = 2
	OrderType_byDiskSize OrderType = 3
)

// Enum value maps for OrderType.
var (
	OrderType_name = map[int32]string{
		0: "byTime",
		1: "byMemory",
		2: "byCPU",
		3: "byDiskSize",
	}
	OrderType_value = map[string]int32{
		"byTime":     0,
		"byMemory":   1,
		"byCPU":      2,
		"byDiskSize": 3,
	}
)

func (x OrderType) Enum() *OrderType {
	p := new(OrderType)
	*p = x
	return p
}

func (x OrderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderType) Descriptor() protoreflect.EnumDescriptor {
	return file_ide_proto_enumTypes[0].Descriptor()
}

func (OrderType) Type() protoreflect.EnumType {
	return &file_ide_proto_enumTypes[0]
}

func (x OrderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderType.Descriptor instead.
func (OrderType) EnumDescriptor() ([]byte, []int) {
	return file_ide_proto_rawDescGZIP(), []int{0}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ide_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_ide_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_ide_proto_rawDescGZIP(), []int{0}
}

type GetIDEForStudentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabId     uint64 `protobuf:"varint,1,opt,name=lab_id,json=labId,proto3" json:"lab_id,omitempty"`
	StudentId uint64 `protobuf:"varint,2,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	Language  uint32 `protobuf:"varint,3,opt,name=language,proto3" json:"language,omitempty"`
	CanEdit   bool   `protobuf:"varint,4,opt,name=can_edit,json=canEdit,proto3" json:"can_edit,omitempty"`
}

func (x *GetIDEForStudentRequest) Reset() {
	*x = GetIDEForStudentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ide_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIDEForStudentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIDEForStudentRequest) ProtoMessage() {}

func (x *GetIDEForStudentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ide_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIDEForStudentRequest.ProtoReflect.Descriptor instead.
func (*GetIDEForStudentRequest) Descriptor() ([]byte, []int) {
	return file_ide_proto_rawDescGZIP(), []int{1}
}

func (x *GetIDEForStudentRequest) GetLabId() uint64 {
	if x != nil {
		return x.LabId
	}
	return 0
}

func (x *GetIDEForStudentRequest) GetStudentId() uint64 {
	if x != nil {
		return x.StudentId
	}
	return 0
}

func (x *GetIDEForStudentRequest) GetLanguage() uint32 {
	if x != nil {
		return x.Language
	}
	return 0
}

func (x *GetIDEForStudentRequest) GetCanEdit() bool {
	if x != nil {
		return x.CanEdit
	}
	return false
}

type GetIDEForTeacherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabId     uint64 `protobuf:"varint,1,opt,name=lab_id,json=labId,proto3" json:"lab_id,omitempty"`
	StudentId uint64 `protobuf:"varint,2,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	TeacherId uint64 `protobuf:"varint,3,opt,name=teacher_id,json=teacherId,proto3" json:"teacher_id,omitempty"`
	Language  uint32 `protobuf:"varint,4,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *GetIDEForTeacherRequest) Reset() {
	*x = GetIDEForTeacherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ide_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIDEForTeacherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIDEForTeacherRequest) ProtoMessage() {}

func (x *GetIDEForTeacherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ide_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIDEForTeacherRequest.ProtoReflect.Descriptor instead.
func (*GetIDEForTeacherRequest) Descriptor() ([]byte, []int) {
	return file_ide_proto_rawDescGZIP(), []int{2}
}

func (x *GetIDEForTeacherRequest) GetLabId() uint64 {
	if x != nil {
		return x.LabId
	}
	return 0
}

func (x *GetIDEForTeacherRequest) GetStudentId() uint64 {
	if x != nil {
		return x.StudentId
	}
	return 0
}

func (x *GetIDEForTeacherRequest) GetTeacherId() uint64 {
	if x != nil {
		return x.TeacherId
	}
	return 0
}

func (x *GetIDEForTeacherRequest) GetLanguage() uint32 {
	if x != nil {
		return x.Language
	}
	return 0
}

type GetIDEResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port     uint32 `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	IsReused bool   `protobuf:"varint,2,opt,name=is_reused,json=isReused,proto3" json:"is_reused,omitempty"`
	Token    string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetIDEResponse) Reset() {
	*x = GetIDEResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ide_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIDEResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIDEResponse) ProtoMessage() {}

func (x *GetIDEResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ide_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIDEResponse.ProtoReflect.Descriptor instead.
func (*GetIDEResponse) Descriptor() ([]byte, []int) {
	return file_ide_proto_rawDescGZIP(), []int{3}
}

func (x *GetIDEResponse) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *GetIDEResponse) GetIsReused() bool {
	if x != nil {
		return x.IsReused
	}
	return false
}

func (x *GetIDEResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type GetContainersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset    uint32    `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit     uint32    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Order     OrderType `protobuf:"varint,3,opt,name=order,proto3,enum=ide.OrderType" json:"order,omitempty"`
	IsReverse bool      `protobuf:"varint,4,opt,name=is_reverse,json=isReverse,proto3" json:"is_reverse,omitempty"`
}

func (x *GetContainersRequest) Reset() {
	*x = GetContainersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ide_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContainersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainersRequest) ProtoMessage() {}

func (x *GetContainersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ide_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainersRequest.ProtoReflect.Descriptor instead.
func (*GetContainersRequest) Descriptor() ([]byte, []int) {
	return file_ide_proto_rawDescGZIP(), []int{4}
}

func (x *GetContainersRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetContainersRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetContainersRequest) GetOrder() OrderType {
	if x != nil {
		return x.Order
	}
	return OrderType_byTime
}

func (x *GetContainersRequest) GetIsReverse() bool {
	if x != nil {
		return x.IsReverse
	}
	return false
}

type TeacherInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeacherId uint64 `protobuf:"varint,1,opt,name=teacher_id,json=teacherId,proto3" json:"teacher_id,omitempty"`
}

func (x *TeacherInfo) Reset() {
	*x = TeacherInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ide_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeacherInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeacherInfo) ProtoMessage() {}

func (x *TeacherInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ide_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeacherInfo.ProtoReflect.Descriptor instead.
func (*TeacherInfo) Descriptor() ([]byte, []int) {
	return file_ide_proto_rawDescGZIP(), []int{5}
}

func (x *TeacherInfo) GetTeacherId() uint64 {
	if x != nil {
		return x.TeacherId
	}
	return 0
}

type GetContainersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerInfos []*GetContainersResponse_ContainerInfo `protobuf:"bytes,1,rep,name=container_infos,json=containerInfos,proto3" json:"container_infos,omitempty"`
	Total          uint32                                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetContainersResponse) Reset() {
	*x = GetContainersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ide_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContainersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainersResponse) ProtoMessage() {}

func (x *GetContainersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ide_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainersResponse.ProtoReflect.Descriptor instead.
func (*GetContainersResponse) Descriptor() ([]byte, []int) {
	return file_ide_proto_rawDescGZIP(), []int{6}
}

func (x *GetContainersResponse) GetContainerInfos() []*GetContainersResponse_ContainerInfo {
	if x != nil {
		return x.ContainerInfos
	}
	return nil
}

func (x *GetContainersResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type StopContainerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerId string `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
}

func (x *StopContainerRequest) Reset() {
	*x = StopContainerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ide_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopContainerRequest) ProtoMessage() {}

func (x *StopContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ide_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopContainerRequest.ProtoReflect.Descriptor instead.
func (*StopContainerRequest) Descriptor() ([]byte, []int) {
	return file_ide_proto_rawDescGZIP(), []int{7}
}

func (x *StopContainerRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

type QuickViewCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabId  uint64 `protobuf:"varint,1,opt,name=lab_id,json=labId,proto3" json:"lab_id,omitempty"`
	UserId uint64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *QuickViewCodeRequest) Reset() {
	*x = QuickViewCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ide_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuickViewCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuickViewCodeRequest) ProtoMessage() {}

func (x *QuickViewCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ide_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuickViewCodeRequest.ProtoReflect.Descriptor instead.
func (*QuickViewCodeRequest) Descriptor() ([]byte, []int) {
	return file_ide_proto_rawDescGZIP(), []int{8}
}

func (x *QuickViewCodeRequest) GetLabId() uint64 {
	if x != nil {
		return x.LabId
	}
	return 0
}

func (x *QuickViewCodeRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type QuickViewCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RootNode *QuickViewCodeResponse_FileNode `protobuf:"bytes,1,opt,name=root_node,json=rootNode,proto3" json:"root_node,omitempty"`
}

func (x *QuickViewCodeResponse) Reset() {
	*x = QuickViewCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ide_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuickViewCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuickViewCodeResponse) ProtoMessage() {}

func (x *QuickViewCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ide_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuickViewCodeResponse.ProtoReflect.Descriptor instead.
func (*QuickViewCodeResponse) Descriptor() ([]byte, []int) {
	return file_ide_proto_rawDescGZIP(), []int{9}
}

func (x *QuickViewCodeResponse) GetRootNode() *QuickViewCodeResponse_FileNode {
	if x != nil {
		return x.RootNode
	}
	return nil
}

type GetContainerNamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*GetContainerNamesResponse_ContainerNameInfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"`
}

func (x *GetContainerNamesResponse) Reset() {
	*x = GetContainerNamesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ide_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContainerNamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerNamesResponse) ProtoMessage() {}

func (x *GetContainerNamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ide_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerNamesResponse.ProtoReflect.Descriptor instead.
func (*GetContainerNamesResponse) Descriptor() ([]byte, []int) {
	return file_ide_proto_rawDescGZIP(), []int{10}
}

func (x *GetContainerNamesResponse) GetInfos() []*GetContainerNamesResponse_ContainerNameInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

type RemoveContainerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerNames []string `protobuf:"bytes,1,rep,name=container_names,json=containerNames,proto3" json:"container_names,omitempty"`
}

func (x *RemoveContainerRequest) Reset() {
	*x = RemoveContainerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ide_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveContainerRequest) ProtoMessage() {}

func (x *RemoveContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ide_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveContainerRequest.ProtoReflect.Descriptor instead.
func (*RemoveContainerRequest) Descriptor() ([]byte, []int) {
	return file_ide_proto_rawDescGZIP(), []int{11}
}

func (x *RemoveContainerRequest) GetContainerNames() []string {
	if x != nil {
		return x.ContainerNames
	}
	return nil
}

type HeartBeatStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt     int64 `protobuf:"varint,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastVisitedAt int64 `protobuf:"varint,2,opt,name=last_visited_at,json=lastVisitedAt,proto3" json:"last_visited_at,omitempty"`
}

func (x *HeartBeatStat) Reset() {
	*x = HeartBeatStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ide_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartBeatStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeatStat) ProtoMessage() {}

func (x *HeartBeatStat) ProtoReflect() protoreflect.Message {
	mi := &file_ide_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeatStat.ProtoReflect.Descriptor instead.
func (*HeartBeatStat) Descriptor() ([]byte, []int) {
	return file_ide_proto_rawDescGZIP(), []int{12}
}

func (x *HeartBeatStat) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *HeartBeatStat) GetLastVisitedAt() int64 {
	if x != nil {
		return x.LastVisitedAt
	}
	return 0
}

type GetContainersResponse_ContainerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerId string       `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	LabId       uint64       `protobuf:"varint,2,opt,name=lab_id,json=labId,proto3" json:"lab_id,omitempty"`
	StudentId   uint64       `protobuf:"varint,3,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	CreatedAt   int64        `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Size        string       `protobuf:"bytes,5,opt,name=size,proto3" json:"size,omitempty"`
	TeacherInfo *TeacherInfo `protobuf:"bytes,6,opt,name=teacher_info,json=teacherInfo,proto3" json:"teacher_info,omitempty"`
	Port        uint32       `protobuf:"varint,7,opt,name=port,proto3" json:"port,omitempty"`
	CpuPerc     string       `protobuf:"bytes,8,opt,name=cpu_perc,json=cpuPerc,proto3" json:"cpu_perc,omitempty"`
	MemoryUsage string       `protobuf:"bytes,9,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
}

func (x *GetContainersResponse_ContainerInfo) Reset() {
	*x = GetContainersResponse_ContainerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ide_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContainersResponse_ContainerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainersResponse_ContainerInfo) ProtoMessage() {}

func (x *GetContainersResponse_ContainerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ide_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainersResponse_ContainerInfo.ProtoReflect.Descriptor instead.
func (*GetContainersResponse_ContainerInfo) Descriptor() ([]byte, []int) {
	return file_ide_proto_rawDescGZIP(), []int{6, 0}
}

func (x *GetContainersResponse_ContainerInfo) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *GetContainersResponse_ContainerInfo) GetLabId() uint64 {
	if x != nil {
		return x.LabId
	}
	return 0
}

func (x *GetContainersResponse_ContainerInfo) GetStudentId() uint64 {
	if x != nil {
		return x.StudentId
	}
	return 0
}

func (x *GetContainersResponse_ContainerInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GetContainersResponse_ContainerInfo) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *GetContainersResponse_ContainerInfo) GetTeacherInfo() *TeacherInfo {
	if x != nil {
		return x.TeacherInfo
	}
	return nil
}

func (x *GetContainersResponse_ContainerInfo) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *GetContainersResponse_ContainerInfo) GetCpuPerc() string {
	if x != nil {
		return x.CpuPerc
	}
	return ""
}

func (x *GetContainersResponse_ContainerInfo) GetMemoryUsage() string {
	if x != nil {
		return x.MemoryUsage
	}
	return ""
}

type QuickViewCodeResponse_FileNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string                            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Content    string                            `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	ChildNodes []*QuickViewCodeResponse_FileNode `protobuf:"bytes,3,rep,name=child_nodes,json=childNodes,proto3" json:"child_nodes,omitempty"`
	IsDir      bool                              `protobuf:"varint,4,opt,name=is_dir,json=isDir,proto3" json:"is_dir,omitempty"`
}

func (x *QuickViewCodeResponse_FileNode) Reset() {
	*x = QuickViewCodeResponse_FileNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ide_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuickViewCodeResponse_FileNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuickViewCodeResponse_FileNode) ProtoMessage() {}

func (x *QuickViewCodeResponse_FileNode) ProtoReflect() protoreflect.Message {
	mi := &file_ide_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuickViewCodeResponse_FileNode.ProtoReflect.Descriptor instead.
func (*QuickViewCodeResponse_FileNode) Descriptor() ([]byte, []int) {
	return file_ide_proto_rawDescGZIP(), []int{9, 0}
}

func (x *QuickViewCodeResponse_FileNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QuickViewCodeResponse_FileNode) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *QuickViewCodeResponse_FileNode) GetChildNodes() []*QuickViewCodeResponse_FileNode {
	if x != nil {
		return x.ChildNodes
	}
	return nil
}

func (x *QuickViewCodeResponse_FileNode) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

type GetContainerNamesResponse_ContainerNameInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LabId       uint64       `protobuf:"varint,1,opt,name=lab_id,json=labId,proto3" json:"lab_id,omitempty"`
	StudentId   uint64       `protobuf:"varint,2,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	TeacherInfo *TeacherInfo `protobuf:"bytes,3,opt,name=teacher_info,json=teacherInfo,proto3" json:"teacher_info,omitempty"`
}

func (x *GetContainerNamesResponse_ContainerNameInfo) Reset() {
	*x = GetContainerNamesResponse_ContainerNameInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ide_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContainerNamesResponse_ContainerNameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerNamesResponse_ContainerNameInfo) ProtoMessage() {}

func (x *GetContainerNamesResponse_ContainerNameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ide_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerNamesResponse_ContainerNameInfo.ProtoReflect.Descriptor instead.
func (*GetContainerNamesResponse_ContainerNameInfo) Descriptor() ([]byte, []int) {
	return file_ide_proto_rawDescGZIP(), []int{10, 0}
}

func (x *GetContainerNamesResponse_ContainerNameInfo) GetLabId() uint64 {
	if x != nil {
		return x.LabId
	}
	return 0
}

func (x *GetContainerNamesResponse_ContainerNameInfo) GetStudentId() uint64 {
	if x != nil {
		return x.StudentId
	}
	return 0
}

func (x *GetContainerNamesResponse_ContainerNameInfo) GetTeacherInfo() *TeacherInfo {
	if x != nil {
		return x.TeacherInfo
	}
	return nil
}

var File_ide_proto protoreflect.FileDescriptor

var file_ide_proto_rawDesc = []byte{
	0x0a, 0x09, 0x69, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x69, 0x64, 0x65,
	0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x86, 0x01, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x49, 0x44, 0x45, 0x46, 0x6f, 0x72, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x5f, 0x65,
	0x64, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x45, 0x64,
	0x69, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x49, 0x44, 0x45, 0x46, 0x6f, 0x72,
	0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15,
	0x0a, 0x06, 0x6c, 0x61, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x6c, 0x61, 0x62, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22,
	0x57, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x49, 0x44, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x75, 0x73,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x52, 0x65, 0x75, 0x73,
	0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x89, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x24, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e,
	0x2e, 0x69, 0x64, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52, 0x65, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x22, 0x2c, 0x0a, 0x0b, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x49, 0x64, 0x22, 0xa5, 0x03, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0f,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x64, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x1a, 0xa2, 0x02, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x61,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x33, 0x0a, 0x0c, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x69, 0x64, 0x65, 0x2e,
	0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x74, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x63, 0x70, 0x75, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x70, 0x75, 0x50, 0x65, 0x72, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x22, 0x39, 0x0a, 0x14, 0x53, 0x74,
	0x6f, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x14, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x56, 0x69,
	0x65, 0x77, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a,
	0x06, 0x6c, 0x61, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c,
	0x61, 0x62, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xf1, 0x01,
	0x0a, 0x15, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x56, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x5f,
	0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69, 0x64, 0x65,
	0x2e, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x56, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x08, 0x72, 0x6f, 0x6f, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x1a, 0x95, 0x01, 0x0a, 0x08, 0x46, 0x69,
	0x6c, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x44, 0x0a, 0x0b, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69, 0x64, 0x65, 0x2e,
	0x51, 0x75, 0x69, 0x63, 0x6b, 0x56, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x0a,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73,
	0x5f, 0x64, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x44, 0x69,
	0x72, 0x22, 0xe3, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x46, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x69, 0x64, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x1a, 0x7e, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x06,
	0x6c, 0x61, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x61,
	0x62, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x33, 0x0a, 0x0c, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x69, 0x64, 0x65, 0x2e, 0x54,
	0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x74, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x41, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x56, 0x0a, 0x0d, 0x48, 0x65,
	0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x2a, 0x40, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0a, 0x0a, 0x06, 0x62, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x62,
	0x79, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x62, 0x79, 0x43,
	0x50, 0x55, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x62, 0x79, 0x44, 0x69, 0x73, 0x6b, 0x53, 0x69,
	0x7a, 0x65, 0x10, 0x03, 0x32, 0xff, 0x04, 0x0a, 0x10, 0x49, 0x44, 0x45, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x49, 0x44, 0x45, 0x46, 0x6f, 0x72, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x2e,
	0x69, 0x64, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x44, 0x45, 0x46, 0x6f, 0x72, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x69, 0x64,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x44, 0x45, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x45, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x49, 0x44, 0x45, 0x46, 0x6f, 0x72, 0x54, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x69, 0x64, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x44,
	0x45, 0x46, 0x6f, 0x72, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x13, 0x2e, 0x69, 0x64, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x44, 0x45, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0a, 0x53, 0x74, 0x6f, 0x70, 0x41,
	0x6c, 0x6c, 0x49, 0x44, 0x45, 0x12, 0x0a, 0x2e, 0x69, 0x64, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x0a, 0x2e, 0x69, 0x64, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x46, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x19,
	0x2e, 0x69, 0x64, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x69, 0x64, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x70, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x69, 0x64, 0x65, 0x2e, 0x53, 0x74, 0x6f,
	0x70, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0a, 0x2e, 0x69, 0x64, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x46, 0x0a,
	0x0d, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x56, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19,
	0x2e, 0x69, 0x64, 0x65, 0x2e, 0x51, 0x75, 0x69, 0x63, 0x6b, 0x56, 0x69, 0x65, 0x77, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x69, 0x64, 0x65, 0x2e,
	0x51, 0x75, 0x69, 0x63, 0x6b, 0x56, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x1b, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x56, 0x69, 0x65, 0x77,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x0a, 0x2e, 0x69, 0x64, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x0a, 0x2e, 0x69, 0x64, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3b, 0x0a, 0x21,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x56, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x0a, 0x2e, 0x69, 0x64, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0a, 0x2e,
	0x69, 0x64, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3f, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x0a,
	0x2e, 0x69, 0x64, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1e, 0x2e, 0x69, 0x64, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0f, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x1b, 0x2e,
	0x69, 0x64, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x69, 0x64, 0x65,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x05, 0x5a, 0x03, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ide_proto_rawDescOnce sync.Once
	file_ide_proto_rawDescData = file_ide_proto_rawDesc
)

func file_ide_proto_rawDescGZIP() []byte {
	file_ide_proto_rawDescOnce.Do(func() {
		file_ide_proto_rawDescData = protoimpl.X.CompressGZIP(file_ide_proto_rawDescData)
	})
	return file_ide_proto_rawDescData
}

var file_ide_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ide_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_ide_proto_goTypes = []interface{}{
	(OrderType)(0),                                      // 0: ide.OrderType
	(*Empty)(nil),                                       // 1: ide.Empty
	(*GetIDEForStudentRequest)(nil),                     // 2: ide.GetIDEForStudentRequest
	(*GetIDEForTeacherRequest)(nil),                     // 3: ide.GetIDEForTeacherRequest
	(*GetIDEResponse)(nil),                              // 4: ide.GetIDEResponse
	(*GetContainersRequest)(nil),                        // 5: ide.GetContainersRequest
	(*TeacherInfo)(nil),                                 // 6: ide.TeacherInfo
	(*GetContainersResponse)(nil),                       // 7: ide.GetContainersResponse
	(*StopContainerRequest)(nil),                        // 8: ide.StopContainerRequest
	(*QuickViewCodeRequest)(nil),                        // 9: ide.QuickViewCodeRequest
	(*QuickViewCodeResponse)(nil),                       // 10: ide.QuickViewCodeResponse
	(*GetContainerNamesResponse)(nil),                   // 11: ide.GetContainerNamesResponse
	(*RemoveContainerRequest)(nil),                      // 12: ide.RemoveContainerRequest
	(*HeartBeatStat)(nil),                               // 13: ide.HeartBeatStat
	(*GetContainersResponse_ContainerInfo)(nil),         // 14: ide.GetContainersResponse.ContainerInfo
	(*QuickViewCodeResponse_FileNode)(nil),              // 15: ide.QuickViewCodeResponse.FileNode
	(*GetContainerNamesResponse_ContainerNameInfo)(nil), // 16: ide.GetContainerNamesResponse.ContainerNameInfo
}
var file_ide_proto_depIdxs = []int32{
	0,  // 0: ide.GetContainersRequest.order:type_name -> ide.OrderType
	14, // 1: ide.GetContainersResponse.container_infos:type_name -> ide.GetContainersResponse.ContainerInfo
	15, // 2: ide.QuickViewCodeResponse.root_node:type_name -> ide.QuickViewCodeResponse.FileNode
	16, // 3: ide.GetContainerNamesResponse.infos:type_name -> ide.GetContainerNamesResponse.ContainerNameInfo
	6,  // 4: ide.GetContainersResponse.ContainerInfo.teacher_info:type_name -> ide.TeacherInfo
	15, // 5: ide.QuickViewCodeResponse.FileNode.child_nodes:type_name -> ide.QuickViewCodeResponse.FileNode
	6,  // 6: ide.GetContainerNamesResponse.ContainerNameInfo.teacher_info:type_name -> ide.TeacherInfo
	2,  // 7: ide.IDEServerService.GetIDEForStudent:input_type -> ide.GetIDEForStudentRequest
	3,  // 8: ide.IDEServerService.GetIDEForTeacher:input_type -> ide.GetIDEForTeacherRequest
	1,  // 9: ide.IDEServerService.StopAllIDE:input_type -> ide.Empty
	5,  // 10: ide.IDEServerService.GetContainers:input_type -> ide.GetContainersRequest
	8,  // 11: ide.IDEServerService.StopContainer:input_type -> ide.StopContainerRequest
	9,  // 12: ide.IDEServerService.QuickViewCode:input_type -> ide.QuickViewCodeRequest
	1,  // 13: ide.IDEServerService.GenerateTestFileForViewCode:input_type -> ide.Empty
	1,  // 14: ide.IDEServerService.RemoveGenerateTestFileForViewCode:input_type -> ide.Empty
	1,  // 15: ide.IDEServerService.GetContainerNames:input_type -> ide.Empty
	12, // 16: ide.IDEServerService.RemoveContainer:input_type -> ide.RemoveContainerRequest
	4,  // 17: ide.IDEServerService.GetIDEForStudent:output_type -> ide.GetIDEResponse
	4,  // 18: ide.IDEServerService.GetIDEForTeacher:output_type -> ide.GetIDEResponse
	1,  // 19: ide.IDEServerService.StopAllIDE:output_type -> ide.Empty
	7,  // 20: ide.IDEServerService.GetContainers:output_type -> ide.GetContainersResponse
	1,  // 21: ide.IDEServerService.StopContainer:output_type -> ide.Empty
	10, // 22: ide.IDEServerService.QuickViewCode:output_type -> ide.QuickViewCodeResponse
	1,  // 23: ide.IDEServerService.GenerateTestFileForViewCode:output_type -> ide.Empty
	1,  // 24: ide.IDEServerService.RemoveGenerateTestFileForViewCode:output_type -> ide.Empty
	11, // 25: ide.IDEServerService.GetContainerNames:output_type -> ide.GetContainerNamesResponse
	1,  // 26: ide.IDEServerService.RemoveContainer:output_type -> ide.Empty
	17, // [17:27] is the sub-list for method output_type
	7,  // [7:17] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_ide_proto_init() }
func file_ide_proto_init() {
	if File_ide_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ide_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ide_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIDEForStudentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ide_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIDEForTeacherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ide_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIDEResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ide_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContainersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ide_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeacherInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ide_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContainersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ide_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopContainerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ide_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuickViewCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ide_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuickViewCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ide_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContainerNamesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ide_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveContainerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ide_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartBeatStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ide_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContainersResponse_ContainerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ide_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuickViewCodeResponse_FileNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ide_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContainerNamesResponse_ContainerNameInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ide_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ide_proto_goTypes,
		DependencyIndexes: file_ide_proto_depIdxs,
		EnumInfos:         file_ide_proto_enumTypes,
		MessageInfos:      file_ide_proto_msgTypes,
	}.Build()
	File_ide_proto = out.File
	file_ide_proto_rawDesc = nil
	file_ide_proto_goTypes = nil
	file_ide_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IDEServerServiceClient is the client API for IDEServerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IDEServerServiceClient interface {
	GetIDEForStudent(ctx context.Context, in *GetIDEForStudentRequest, opts ...grpc.CallOption) (*GetIDEResponse, error)
	GetIDEForTeacher(ctx context.Context, in *GetIDEForTeacherRequest, opts ...grpc.CallOption) (*GetIDEResponse, error)
	StopAllIDE(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	GetContainers(ctx context.Context, in *GetContainersRequest, opts ...grpc.CallOption) (*GetContainersResponse, error)
	StopContainer(ctx context.Context, in *StopContainerRequest, opts ...grpc.CallOption) (*Empty, error)
	QuickViewCode(ctx context.Context, in *QuickViewCodeRequest, opts ...grpc.CallOption) (*QuickViewCodeResponse, error)
	GenerateTestFileForViewCode(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	RemoveGenerateTestFileForViewCode(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	GetContainerNames(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetContainerNamesResponse, error)
	RemoveContainer(ctx context.Context, in *RemoveContainerRequest, opts ...grpc.CallOption) (*Empty, error)
}

type iDEServerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewIDEServerServiceClient(cc grpc.ClientConnInterface) IDEServerServiceClient {
	return &iDEServerServiceClient{cc}
}

func (c *iDEServerServiceClient) GetIDEForStudent(ctx context.Context, in *GetIDEForStudentRequest, opts ...grpc.CallOption) (*GetIDEResponse, error) {
	out := new(GetIDEResponse)
	err := c.cc.Invoke(ctx, "/ide.IDEServerService/GetIDEForStudent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iDEServerServiceClient) GetIDEForTeacher(ctx context.Context, in *GetIDEForTeacherRequest, opts ...grpc.CallOption) (*GetIDEResponse, error) {
	out := new(GetIDEResponse)
	err := c.cc.Invoke(ctx, "/ide.IDEServerService/GetIDEForTeacher", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iDEServerServiceClient) StopAllIDE(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/ide.IDEServerService/StopAllIDE", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iDEServerServiceClient) GetContainers(ctx context.Context, in *GetContainersRequest, opts ...grpc.CallOption) (*GetContainersResponse, error) {
	out := new(GetContainersResponse)
	err := c.cc.Invoke(ctx, "/ide.IDEServerService/GetContainers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iDEServerServiceClient) StopContainer(ctx context.Context, in *StopContainerRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/ide.IDEServerService/StopContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iDEServerServiceClient) QuickViewCode(ctx context.Context, in *QuickViewCodeRequest, opts ...grpc.CallOption) (*QuickViewCodeResponse, error) {
	out := new(QuickViewCodeResponse)
	err := c.cc.Invoke(ctx, "/ide.IDEServerService/QuickViewCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iDEServerServiceClient) GenerateTestFileForViewCode(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/ide.IDEServerService/GenerateTestFileForViewCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iDEServerServiceClient) RemoveGenerateTestFileForViewCode(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/ide.IDEServerService/RemoveGenerateTestFileForViewCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iDEServerServiceClient) GetContainerNames(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetContainerNamesResponse, error) {
	out := new(GetContainerNamesResponse)
	err := c.cc.Invoke(ctx, "/ide.IDEServerService/GetContainerNames", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iDEServerServiceClient) RemoveContainer(ctx context.Context, in *RemoveContainerRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/ide.IDEServerService/RemoveContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IDEServerServiceServer is the server API for IDEServerService service.
type IDEServerServiceServer interface {
	GetIDEForStudent(context.Context, *GetIDEForStudentRequest) (*GetIDEResponse, error)
	GetIDEForTeacher(context.Context, *GetIDEForTeacherRequest) (*GetIDEResponse, error)
	StopAllIDE(context.Context, *Empty) (*Empty, error)
	GetContainers(context.Context, *GetContainersRequest) (*GetContainersResponse, error)
	StopContainer(context.Context, *StopContainerRequest) (*Empty, error)
	QuickViewCode(context.Context, *QuickViewCodeRequest) (*QuickViewCodeResponse, error)
	GenerateTestFileForViewCode(context.Context, *Empty) (*Empty, error)
	RemoveGenerateTestFileForViewCode(context.Context, *Empty) (*Empty, error)
	GetContainerNames(context.Context, *Empty) (*GetContainerNamesResponse, error)
	RemoveContainer(context.Context, *RemoveContainerRequest) (*Empty, error)
}

// UnimplementedIDEServerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedIDEServerServiceServer struct {
}

func (*UnimplementedIDEServerServiceServer) GetIDEForStudent(context.Context, *GetIDEForStudentRequest) (*GetIDEResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIDEForStudent not implemented")
}
func (*UnimplementedIDEServerServiceServer) GetIDEForTeacher(context.Context, *GetIDEForTeacherRequest) (*GetIDEResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIDEForTeacher not implemented")
}
func (*UnimplementedIDEServerServiceServer) StopAllIDE(context.Context, *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopAllIDE not implemented")
}
func (*UnimplementedIDEServerServiceServer) GetContainers(context.Context, *GetContainersRequest) (*GetContainersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContainers not implemented")
}
func (*UnimplementedIDEServerServiceServer) StopContainer(context.Context, *StopContainerRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopContainer not implemented")
}
func (*UnimplementedIDEServerServiceServer) QuickViewCode(context.Context, *QuickViewCodeRequest) (*QuickViewCodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QuickViewCode not implemented")
}
func (*UnimplementedIDEServerServiceServer) GenerateTestFileForViewCode(context.Context, *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateTestFileForViewCode not implemented")
}
func (*UnimplementedIDEServerServiceServer) RemoveGenerateTestFileForViewCode(context.Context, *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveGenerateTestFileForViewCode not implemented")
}
func (*UnimplementedIDEServerServiceServer) GetContainerNames(context.Context, *Empty) (*GetContainerNamesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContainerNames not implemented")
}
func (*UnimplementedIDEServerServiceServer) RemoveContainer(context.Context, *RemoveContainerRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveContainer not implemented")
}

func RegisterIDEServerServiceServer(s *grpc.Server, srv IDEServerServiceServer) {
	s.RegisterService(&_IDEServerService_serviceDesc, srv)
}

func _IDEServerService_GetIDEForStudent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIDEForStudentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IDEServerServiceServer).GetIDEForStudent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ide.IDEServerService/GetIDEForStudent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IDEServerServiceServer).GetIDEForStudent(ctx, req.(*GetIDEForStudentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IDEServerService_GetIDEForTeacher_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIDEForTeacherRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IDEServerServiceServer).GetIDEForTeacher(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ide.IDEServerService/GetIDEForTeacher",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IDEServerServiceServer).GetIDEForTeacher(ctx, req.(*GetIDEForTeacherRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IDEServerService_StopAllIDE_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IDEServerServiceServer).StopAllIDE(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ide.IDEServerService/StopAllIDE",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IDEServerServiceServer).StopAllIDE(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _IDEServerService_GetContainers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetContainersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IDEServerServiceServer).GetContainers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ide.IDEServerService/GetContainers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IDEServerServiceServer).GetContainers(ctx, req.(*GetContainersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IDEServerService_StopContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IDEServerServiceServer).StopContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ide.IDEServerService/StopContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IDEServerServiceServer).StopContainer(ctx, req.(*StopContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IDEServerService_QuickViewCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QuickViewCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IDEServerServiceServer).QuickViewCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ide.IDEServerService/QuickViewCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IDEServerServiceServer).QuickViewCode(ctx, req.(*QuickViewCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IDEServerService_GenerateTestFileForViewCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IDEServerServiceServer).GenerateTestFileForViewCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ide.IDEServerService/GenerateTestFileForViewCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IDEServerServiceServer).GenerateTestFileForViewCode(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _IDEServerService_RemoveGenerateTestFileForViewCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IDEServerServiceServer).RemoveGenerateTestFileForViewCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ide.IDEServerService/RemoveGenerateTestFileForViewCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IDEServerServiceServer).RemoveGenerateTestFileForViewCode(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _IDEServerService_GetContainerNames_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IDEServerServiceServer).GetContainerNames(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ide.IDEServerService/GetContainerNames",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IDEServerServiceServer).GetContainerNames(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _IDEServerService_RemoveContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveContainerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IDEServerServiceServer).RemoveContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ide.IDEServerService/RemoveContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IDEServerServiceServer).RemoveContainer(ctx, req.(*RemoveContainerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _IDEServerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ide.IDEServerService",
	HandlerType: (*IDEServerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetIDEForStudent",
			Handler:    _IDEServerService_GetIDEForStudent_Handler,
		},
		{
			MethodName: "GetIDEForTeacher",
			Handler:    _IDEServerService_GetIDEForTeacher_Handler,
		},
		{
			MethodName: "StopAllIDE",
			Handler:    _IDEServerService_StopAllIDE_Handler,
		},
		{
			MethodName: "GetContainers",
			Handler:    _IDEServerService_GetContainers_Handler,
		},
		{
			MethodName: "StopContainer",
			Handler:    _IDEServerService_StopContainer_Handler,
		},
		{
			MethodName: "QuickViewCode",
			Handler:    _IDEServerService_QuickViewCode_Handler,
		},
		{
			MethodName: "GenerateTestFileForViewCode",
			Handler:    _IDEServerService_GenerateTestFileForViewCode_Handler,
		},
		{
			MethodName: "RemoveGenerateTestFileForViewCode",
			Handler:    _IDEServerService_RemoveGenerateTestFileForViewCode_Handler,
		},
		{
			MethodName: "GetContainerNames",
			Handler:    _IDEServerService_GetContainerNames_Handler,
		},
		{
			MethodName: "RemoveContainer",
			Handler:    _IDEServerService_RemoveContainer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ide.proto",
}
